# loop continuous-execution process-lifecycle
The application in this repository is designed to run in a continuous loop and will not end the process automatically. This is important for understanding the app's execution model and lifecycle management.

# nostr relay khatru sphinx encryption
cmd/shallot is a Nostr relay implementation that uses the khatru framework and implements sphinx encryption for enhanced privacy and security.

# nostr client go-nostr library
nostr-client is a Nostr client implementation that uses the go-nostr library for interacting with Nostr relays.

# ["sphinx", "onion-routing", "nostr", "circuit"]
The shallot project implements onion routing for Nostr messages using Sphinx encryption. Key components: 1) Sphinx module handles onion packet creation/decryption with constant 12KB packet size for traffic analysis resistance, 2) cmd/nostr-client is a Nostr client that can send both regular messages and onion-routed messages (kind 720) using discovered NIP-66 relays, 3) cmd/shallot is a Nostr relay that handles onion routing by processing kind 720 events and forwarding them through the circuit, 4) circuit/handler.go manages relay connections and forwards onion packets between hops.

